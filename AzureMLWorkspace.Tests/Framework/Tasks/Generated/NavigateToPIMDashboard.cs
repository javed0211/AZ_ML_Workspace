// This file was auto-generated by AI Test Generation
// Generated on: 2024-01-15 10:30:00 UTC
// Framework: Azure ML Workspace Test Automation
// 
// IMPORTANT: Review and implement any NotImplementedException methods before running tests
// 

using AzureMLWorkspace.Tests.Framework.Screenplay;
using AzureMLWorkspace.Tests.Framework.Abilities;
using Microsoft.Extensions.Logging;

namespace AzureMLWorkspace.Tests.Framework.Tasks.Generated;

/// <summary>
/// Task to navigate to PIM dashboard
/// </summary>
public class NavigateToPIMDashboard : ITask
{
    private readonly ILogger<NavigateToPIMDashboard> _logger;
    private string _startingLocation = "portal-home";

    /// <summary>
    /// The name of the task
    /// </summary>
    public string Name => $"Navigate to PIM dashboard from {_startingLocation}";

    private NavigateToPIMDashboard(ILogger<NavigateToPIMDashboard> logger)
    {
        _logger = logger ?? throw new ArgumentNullException(nameof(logger));
    }

    /// <summary>
    /// Creates a navigation task from the portal home page
    /// </summary>
    /// <returns>Navigation task instance</returns>
    public static NavigateToPIMDashboard FromPortalHome()
    {
        var logger = AzureMLWorkspace.Tests.Framework.Abilities.TestContext.ServiceProvider.GetRequiredService<ILogger<NavigateToPIMDashboard>>();
        return new NavigateToPIMDashboard(logger)
        {
            _startingLocation = "portal-home"
        };
    }

    /// <summary>
    /// Creates a navigation task from a specific location
    /// </summary>
    /// <param name="location">Starting location</param>
    /// <returns>Navigation task instance</returns>
    public static NavigateToPIMDashboard From(string location)
    {
        var logger = AzureMLWorkspace.Tests.Framework.Abilities.TestContext.ServiceProvider.GetRequiredService<ILogger<NavigateToPIMDashboard>>();
        return new NavigateToPIMDashboard(logger)
        {
            _startingLocation = location
        };
    }

    /// <summary>
    /// Performs the navigation to PIM dashboard
    /// </summary>
    /// <param name="actor">The actor performing the task</param>
    public async Task PerformAs(IActor actor)
    {
        _logger.LogInformation("Actor {ActorName} navigating to PIM dashboard from {StartingLocation}", 
            actor.Name, _startingLocation);

        try
        {
            var browser = actor.Using<BrowseTheWeb>();
            var page = browser.Page;

            // Navigate directly to PIM dashboard URL
            _logger.LogDebug("Navigating to PIM dashboard URL");
            await page.GotoAsync("https://portal.azure.com/#view/Microsoft_Azure_PIMCommon/CommonMenuBlade/~/quickStart", 
                new() { WaitUntil = WaitUntilState.NetworkIdle });

            // Wait for PIM dashboard to load
            await page.WaitForSelectorAsync("[data-testid='pim-dashboard'], .pim-dashboard, .ms-Nav-compositeLink", 
                new() { Timeout = 30000 });

            // Verify we're on the PIM dashboard
            var currentUrl = page.Url;
            if (!currentUrl.Contains("privilegedidentitymanagement") && !currentUrl.Contains("pim"))
            {
                _logger.LogWarning("URL doesn't appear to be PIM dashboard: {CurrentUrl}", currentUrl);
                
                // Try alternative navigation through search
                await NavigateViaPIMSearch(page);
            }

            _logger.LogInformation("Successfully navigated to PIM dashboard");
        }
        catch (Exception ex)
        {
            _logger.LogError(ex, "Failed to navigate to PIM dashboard");
            throw new InvalidOperationException($"Navigation to PIM dashboard failed: {ex.Message}", ex);
        }
    }

    private async Task NavigateViaPIMSearch(IPage page)
    {
        try
        {
            _logger.LogDebug("Attempting to navigate to PIM via search");
            
            // Look for search box in Azure portal
            var searchSelector = "input[placeholder*='Search'], input[aria-label*='Search'], .search-input";
            var searchElement = await page.QuerySelectorAsync(searchSelector);
            
            if (searchElement != null)
            {
                await searchElement.FillAsync("Privileged Identity Management");
                await searchElement.PressAsync("Enter");
                
                // Wait for search results and click on PIM
                await page.WaitForSelectorAsync("text='Privileged Identity Management', .search-result", 
                    new() { Timeout = 15000 });
                
                var pimResult = await page.QuerySelectorAsync("text='Privileged Identity Management'");
                if (pimResult != null)
                {
                    await pimResult.ClickAsync();
                    
                    // Wait for PIM to load
                    await page.WaitForSelectorAsync("[data-testid='pim-dashboard'], .pim-dashboard", 
                        new() { Timeout = 30000 });
                }
                else
                {
                    throw new InvalidOperationException("PIM not found in search results");
                }
            }
            else
            {
                throw new InvalidOperationException("Search box not found in Azure portal");
            }
        }
        catch (Exception ex)
        {
            _logger.LogError(ex, "Failed to navigate to PIM via search");
            throw;
        }
    }
}
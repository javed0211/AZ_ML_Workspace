<testsuites id="" name="" tests="184" failures="0" skipped="184" errors="0" time="0.03739600000000001">
<testsuite name="azure-ai-services.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="electron-vscode" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="Azure AI Services Integration › Azure AI Search Service › should create Azure AI Search configuration file" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure AI Search Service › should create Python script for Azure AI Search indexing" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure AI Search Service › should create Azure AI Search query examples" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure Document Intelligence Service › should create Document Intelligence configuration file" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure Document Intelligence Service › should create Document Intelligence analysis script" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure Document Intelligence Service › should create custom model training script" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure AI Services Integration › should create integrated document processing pipeline" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure AI Services Integration › should create requirements file for Azure AI services" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › should verify all Azure AI service files are created" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="azure-ml-integration.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="electron-vscode" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Azure ML VS Code Integration › should open Azure ML workspace configuration" classname="azure-ml-integration.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure ML VS Code Integration › should create and edit Python ML script" classname="azure-ml-integration.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure ML VS Code Integration › should work with Jupyter notebooks" classname="azure-ml-integration.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure ML VS Code Integration › should handle Azure ML extension commands" classname="azure-ml-integration.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure ML VS Code Integration › should open and navigate project structure" classname="azure-ml-integration.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure ML VS Code Integration › should handle terminal operations" classname="azure-ml-integration.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="cross-platform-jupyter.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="electron-vscode" tests="3" failures="0" skipped="3" time="0" errors="0">
<testcase name="Cross-Platform Jupyter Notebook Runner › should run existing Jupyter notebook from any folder on any OS" classname="cross-platform-jupyter.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Platform Jupyter Notebook Runner › should handle different notebook formats and encodings" classname="cross-platform-jupyter.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Platform Jupyter Notebook Runner › should run existing notebook from any specified folder" classname="cross-platform-jupyter.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="example-demo.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="electron-vscode" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="VS Code Electron Framework Demo › Complete VS Code automation workflow demo" classname="example-demo.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="jupyter-notebook.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="electron-vscode" tests="4" failures="0" skipped="4" time="0" errors="0">
<testcase name="Jupyter Notebook Testing › should open and display Jupyter notebook correctly" classname="jupyter-notebook.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Jupyter Notebook Testing › should verify notebook file structure" classname="jupyter-notebook.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Jupyter Notebook Testing › should handle basic VS Code file operations" classname="jupyter-notebook.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Jupyter Notebook Testing › should verify VS Code workspace integration" classname="jupyter-notebook.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="vscode-basic.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="electron-vscode" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="VS Code Basic Functionality › should launch VS Code successfully" classname="vscode-basic.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Basic Functionality › should create and edit a new file" classname="vscode-basic.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Basic Functionality › should open command palette and execute command" classname="vscode-basic.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Basic Functionality › should open and work with files" classname="vscode-basic.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Basic Functionality › should handle keyboard shortcuts" classname="vscode-basic.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Basic Functionality › should handle multiple windows" classname="vscode-basic.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="vscode-electron-real.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="electron-vscode" tests="3" failures="0" skipped="3" time="0" errors="0">
<testcase name="VS Code Real Electron Connection › should launch VS Code as Electron app and connect" classname="vscode-electron-real.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Real Electron Connection › should interact with VS Code via AppleScript" classname="vscode-electron-real.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Real Electron Connection › should verify VS Code file operations" classname="vscode-electron-real.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="vscode-official.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="electron-vscode" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="VS Code Official Framework Tests › should launch VS Code using official framework" classname="vscode-official.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Official Framework Tests › should verify VS Code can be controlled programmatically" classname="vscode-official.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="vscode-settings.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="electron-vscode" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="VS Code Settings and Configuration › should open and navigate settings" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should modify editor settings" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should configure Python interpreter" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should manage extensions" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should configure workspace settings" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should configure keybindings" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should configure color theme" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should handle user snippets" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="vscode-working-final.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="electron-vscode" tests="4" failures="0" skipped="4" time="0" errors="0">
<testcase name="VS Code Working Final Tests › should launch VS Code and verify it works" classname="vscode-working-final.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Working Final Tests › should open specific files in VS Code" classname="vscode-working-final.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Working Final Tests › should interact with VS Code via AppleScript" classname="vscode-working-final.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Working Final Tests › should create and manage Azure ML project structure" classname="vscode-working-final.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="azure-ai-services.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="chromium" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="Azure AI Services Integration › Azure AI Search Service › should create Azure AI Search configuration file" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure AI Search Service › should create Python script for Azure AI Search indexing" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure AI Search Service › should create Azure AI Search query examples" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure Document Intelligence Service › should create Document Intelligence configuration file" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure Document Intelligence Service › should create Document Intelligence analysis script" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure Document Intelligence Service › should create custom model training script" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure AI Services Integration › should create integrated document processing pipeline" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure AI Services Integration › should create requirements file for Azure AI services" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › should verify all Azure AI service files are created" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="azure-ml-integration.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="chromium" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Azure ML VS Code Integration › should open Azure ML workspace configuration" classname="azure-ml-integration.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure ML VS Code Integration › should create and edit Python ML script" classname="azure-ml-integration.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure ML VS Code Integration › should work with Jupyter notebooks" classname="azure-ml-integration.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure ML VS Code Integration › should handle Azure ML extension commands" classname="azure-ml-integration.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure ML VS Code Integration › should open and navigate project structure" classname="azure-ml-integration.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure ML VS Code Integration › should handle terminal operations" classname="azure-ml-integration.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="cross-platform-jupyter.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="chromium" tests="3" failures="0" skipped="3" time="0" errors="0">
<testcase name="Cross-Platform Jupyter Notebook Runner › should run existing Jupyter notebook from any folder on any OS" classname="cross-platform-jupyter.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Platform Jupyter Notebook Runner › should handle different notebook formats and encodings" classname="cross-platform-jupyter.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Platform Jupyter Notebook Runner › should run existing notebook from any specified folder" classname="cross-platform-jupyter.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="example-demo.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="chromium" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="VS Code Electron Framework Demo › Complete VS Code automation workflow demo" classname="example-demo.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="jupyter-notebook.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="chromium" tests="4" failures="0" skipped="4" time="0" errors="0">
<testcase name="Jupyter Notebook Testing › should open and display Jupyter notebook correctly" classname="jupyter-notebook.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Jupyter Notebook Testing › should verify notebook file structure" classname="jupyter-notebook.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Jupyter Notebook Testing › should handle basic VS Code file operations" classname="jupyter-notebook.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Jupyter Notebook Testing › should verify VS Code workspace integration" classname="jupyter-notebook.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="vscode-basic.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="chromium" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="VS Code Basic Functionality › should launch VS Code successfully" classname="vscode-basic.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Basic Functionality › should create and edit a new file" classname="vscode-basic.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Basic Functionality › should open command palette and execute command" classname="vscode-basic.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Basic Functionality › should open and work with files" classname="vscode-basic.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Basic Functionality › should handle keyboard shortcuts" classname="vscode-basic.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Basic Functionality › should handle multiple windows" classname="vscode-basic.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="vscode-electron-real.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="chromium" tests="3" failures="0" skipped="3" time="0" errors="0">
<testcase name="VS Code Real Electron Connection › should launch VS Code as Electron app and connect" classname="vscode-electron-real.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Real Electron Connection › should interact with VS Code via AppleScript" classname="vscode-electron-real.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Real Electron Connection › should verify VS Code file operations" classname="vscode-electron-real.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="vscode-official.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="chromium" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="VS Code Official Framework Tests › should launch VS Code using official framework" classname="vscode-official.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Official Framework Tests › should verify VS Code can be controlled programmatically" classname="vscode-official.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="vscode-settings.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="chromium" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="VS Code Settings and Configuration › should open and navigate settings" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should modify editor settings" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should configure Python interpreter" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should manage extensions" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should configure workspace settings" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should configure keybindings" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should configure color theme" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should handle user snippets" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="vscode-working-final.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="chromium" tests="4" failures="0" skipped="4" time="0" errors="0">
<testcase name="VS Code Working Final Tests › should launch VS Code and verify it works" classname="vscode-working-final.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Working Final Tests › should open specific files in VS Code" classname="vscode-working-final.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Working Final Tests › should interact with VS Code via AppleScript" classname="vscode-working-final.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Working Final Tests › should create and manage Azure ML project structure" classname="vscode-working-final.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="azure-ai-services.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="firefox" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="Azure AI Services Integration › Azure AI Search Service › should create Azure AI Search configuration file" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure AI Search Service › should create Python script for Azure AI Search indexing" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure AI Search Service › should create Azure AI Search query examples" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure Document Intelligence Service › should create Document Intelligence configuration file" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure Document Intelligence Service › should create Document Intelligence analysis script" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure Document Intelligence Service › should create custom model training script" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure AI Services Integration › should create integrated document processing pipeline" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure AI Services Integration › should create requirements file for Azure AI services" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › should verify all Azure AI service files are created" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="azure-ml-integration.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="firefox" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Azure ML VS Code Integration › should open Azure ML workspace configuration" classname="azure-ml-integration.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure ML VS Code Integration › should create and edit Python ML script" classname="azure-ml-integration.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure ML VS Code Integration › should work with Jupyter notebooks" classname="azure-ml-integration.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure ML VS Code Integration › should handle Azure ML extension commands" classname="azure-ml-integration.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure ML VS Code Integration › should open and navigate project structure" classname="azure-ml-integration.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure ML VS Code Integration › should handle terminal operations" classname="azure-ml-integration.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="cross-platform-jupyter.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="firefox" tests="3" failures="0" skipped="3" time="0" errors="0">
<testcase name="Cross-Platform Jupyter Notebook Runner › should run existing Jupyter notebook from any folder on any OS" classname="cross-platform-jupyter.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Platform Jupyter Notebook Runner › should handle different notebook formats and encodings" classname="cross-platform-jupyter.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Platform Jupyter Notebook Runner › should run existing notebook from any specified folder" classname="cross-platform-jupyter.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="example-demo.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="firefox" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="VS Code Electron Framework Demo › Complete VS Code automation workflow demo" classname="example-demo.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="jupyter-notebook.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="firefox" tests="4" failures="0" skipped="4" time="0" errors="0">
<testcase name="Jupyter Notebook Testing › should open and display Jupyter notebook correctly" classname="jupyter-notebook.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Jupyter Notebook Testing › should verify notebook file structure" classname="jupyter-notebook.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Jupyter Notebook Testing › should handle basic VS Code file operations" classname="jupyter-notebook.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Jupyter Notebook Testing › should verify VS Code workspace integration" classname="jupyter-notebook.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="vscode-basic.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="firefox" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="VS Code Basic Functionality › should launch VS Code successfully" classname="vscode-basic.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Basic Functionality › should create and edit a new file" classname="vscode-basic.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Basic Functionality › should open command palette and execute command" classname="vscode-basic.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Basic Functionality › should open and work with files" classname="vscode-basic.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Basic Functionality › should handle keyboard shortcuts" classname="vscode-basic.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Basic Functionality › should handle multiple windows" classname="vscode-basic.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="vscode-electron-real.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="firefox" tests="3" failures="0" skipped="3" time="0" errors="0">
<testcase name="VS Code Real Electron Connection › should launch VS Code as Electron app and connect" classname="vscode-electron-real.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Real Electron Connection › should interact with VS Code via AppleScript" classname="vscode-electron-real.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Real Electron Connection › should verify VS Code file operations" classname="vscode-electron-real.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="vscode-official.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="firefox" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="VS Code Official Framework Tests › should launch VS Code using official framework" classname="vscode-official.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Official Framework Tests › should verify VS Code can be controlled programmatically" classname="vscode-official.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="vscode-settings.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="firefox" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="VS Code Settings and Configuration › should open and navigate settings" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should modify editor settings" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should configure Python interpreter" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should manage extensions" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should configure workspace settings" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should configure keybindings" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should configure color theme" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should handle user snippets" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="vscode-working-final.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="firefox" tests="4" failures="0" skipped="4" time="0" errors="0">
<testcase name="VS Code Working Final Tests › should launch VS Code and verify it works" classname="vscode-working-final.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Working Final Tests › should open specific files in VS Code" classname="vscode-working-final.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Working Final Tests › should interact with VS Code via AppleScript" classname="vscode-working-final.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Working Final Tests › should create and manage Azure ML project structure" classname="vscode-working-final.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="azure-ai-services.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="webkit" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="Azure AI Services Integration › Azure AI Search Service › should create Azure AI Search configuration file" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure AI Search Service › should create Python script for Azure AI Search indexing" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure AI Search Service › should create Azure AI Search query examples" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure Document Intelligence Service › should create Document Intelligence configuration file" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure Document Intelligence Service › should create Document Intelligence analysis script" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure Document Intelligence Service › should create custom model training script" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure AI Services Integration › should create integrated document processing pipeline" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › Azure AI Services Integration › should create requirements file for Azure AI services" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure AI Services Integration › should verify all Azure AI service files are created" classname="azure-ai-services.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="azure-ml-integration.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="webkit" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Azure ML VS Code Integration › should open Azure ML workspace configuration" classname="azure-ml-integration.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure ML VS Code Integration › should create and edit Python ML script" classname="azure-ml-integration.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure ML VS Code Integration › should work with Jupyter notebooks" classname="azure-ml-integration.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure ML VS Code Integration › should handle Azure ML extension commands" classname="azure-ml-integration.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure ML VS Code Integration › should open and navigate project structure" classname="azure-ml-integration.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Azure ML VS Code Integration › should handle terminal operations" classname="azure-ml-integration.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="cross-platform-jupyter.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="webkit" tests="3" failures="0" skipped="3" time="0" errors="0">
<testcase name="Cross-Platform Jupyter Notebook Runner › should run existing Jupyter notebook from any folder on any OS" classname="cross-platform-jupyter.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Platform Jupyter Notebook Runner › should handle different notebook formats and encodings" classname="cross-platform-jupyter.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Platform Jupyter Notebook Runner › should run existing notebook from any specified folder" classname="cross-platform-jupyter.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="example-demo.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="webkit" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="VS Code Electron Framework Demo › Complete VS Code automation workflow demo" classname="example-demo.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="jupyter-notebook.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="webkit" tests="4" failures="0" skipped="4" time="0" errors="0">
<testcase name="Jupyter Notebook Testing › should open and display Jupyter notebook correctly" classname="jupyter-notebook.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Jupyter Notebook Testing › should verify notebook file structure" classname="jupyter-notebook.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Jupyter Notebook Testing › should handle basic VS Code file operations" classname="jupyter-notebook.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Jupyter Notebook Testing › should verify VS Code workspace integration" classname="jupyter-notebook.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="vscode-basic.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="webkit" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="VS Code Basic Functionality › should launch VS Code successfully" classname="vscode-basic.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Basic Functionality › should create and edit a new file" classname="vscode-basic.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Basic Functionality › should open command palette and execute command" classname="vscode-basic.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Basic Functionality › should open and work with files" classname="vscode-basic.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Basic Functionality › should handle keyboard shortcuts" classname="vscode-basic.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Basic Functionality › should handle multiple windows" classname="vscode-basic.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="vscode-electron-real.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="webkit" tests="3" failures="0" skipped="3" time="0" errors="0">
<testcase name="VS Code Real Electron Connection › should launch VS Code as Electron app and connect" classname="vscode-electron-real.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Real Electron Connection › should interact with VS Code via AppleScript" classname="vscode-electron-real.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Real Electron Connection › should verify VS Code file operations" classname="vscode-electron-real.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="vscode-official.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="webkit" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="VS Code Official Framework Tests › should launch VS Code using official framework" classname="vscode-official.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Official Framework Tests › should verify VS Code can be controlled programmatically" classname="vscode-official.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="vscode-settings.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="webkit" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="VS Code Settings and Configuration › should open and navigate settings" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should modify editor settings" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should configure Python interpreter" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should manage extensions" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should configure workspace settings" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should configure keybindings" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should configure color theme" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Settings and Configuration › should handle user snippets" classname="vscode-settings.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="vscode-working-final.test.ts" timestamp="2025-10-10T18:33:48.013Z" hostname="webkit" tests="4" failures="0" skipped="4" time="0" errors="0">
<testcase name="VS Code Working Final Tests › should launch VS Code and verify it works" classname="vscode-working-final.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Working Final Tests › should open specific files in VS Code" classname="vscode-working-final.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Working Final Tests › should interact with VS Code via AppleScript" classname="vscode-working-final.test.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="VS Code Working Final Tests › should create and manage Azure ML project structure" classname="vscode-working-final.test.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
</testsuites>